#
# SS = Shared Services
# https://docs.docker.com/compose/reference/envvars/#compose_project_name
#
COMPOSE_PROJECT_NAME=ss

#
# Domain, under which default, shared services will run.
# Default: .wod
# Example subdomains, under which services will run under:
#   - pg-admin.wod.docker
#   - router.wod.docker
#   - ui.wod.docker
# Can be left blank, but then $TLS_DOMAINS need to contain all top level domains of your projects.
#
# Example:
# Using empty SHARED_DOMAIN_SEGMENT=""
#   TLS_DOMAINS="pg-admin.docker router.docker ui.docker"
# Using custom SHARED_DOMAIN_SEGMENT=".wod"
#  TLS_DOMAINS="pg-admin.wod.docker router.wod.docker ui.wod.docker"
#
SHARED_DOMAIN_SEGMENT=

#
# Specify domains for mkcert
# Because of browser limitations, each top-level domain should be added separately.
# This ensures that certificates are correctly recognized by browsers.
# Examples of top-level domains:
#   - pg-admin.docker
#   - router.docker
#   - ui.docker
#
# Wildcards can be used, but note that they only cover one level of subdomains.
# Example:
#   - *.laravel-starter-tpl.docker will match api.laravel-starter-tpl.docker
#   - However, it will not match api.prod.laravel-starter-tpl.docker
#
TLS_DOMAINS="ui.docker router.docker pg-admin.docker *.wod.docker *.tpl.wod.docker *.laravel-starter-tpl.docker *.spiral-starter-tpl.docker *.laravel-cycle-starter-tpl.docker *.laravel-app.docker *.spiral-app-temporal-demo.docker"

#
# DNSMasq Configuration
#
# This service will route all *.docker domains to the local macOS or Linux machine.
# Example: your-project.docker will be routed to the local machine 127.0.0.1
#
# `ping your-project.docker` will return
#
# PING your-project.docker (127.0.0.1): 56 data bytes
# 64 bytes from 127.0.0.1: icmp_seq=0 ttl=64 time=0.129 ms
# 64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.173 ms
# 64 bytes from 127.0.0.1: icmp_seq=2 ttl=64 time=0.111 ms
# 64 bytes from 127.0.0.1: icmp_seq=3 ttl=64 time=0.176 ms
#
# This allows further configuration of Traefik to route the traffic to the correct container.
#
# For more information, see:
# https://github.com/DrPsychick/docker-dnsmasq
#
# Note: To use, for example .mac domain, you need to change
# DMQ_GLOBAL=address=/docker/127.0.0.1 (to =>) DMQ_GLOBAL=address=/mac/127.0.0.1
#
DMQ_DHCP_DNS=dhcp-option=6,172.17.10.1,8.8.8.8,8.8.4.4
DMQ_DHCP_GATEWAY=dhcp-option=3,172.17.10.1
DMQ_DHCP_PXE=
DMQ_DHCP_RANGES=dhcp-range=172.17.10.10,172.17.10.100,24h
DMQ_DHCP_TFTP=
DMQ_DHCP_WINS=
DMQ_DNS_ADDRESS=
DMQ_DNS_ALIAS=
DMQ_DNS_CNAME=
DMQ_DNS_DOMAIN=domain=local
DMQ_DNS_FLAGS=expand-hosts\ndomain-needed\nselfmx\ndns-loop-detect
DMQ_DNS_LOCAL=local=/local/
DMQ_DNS_RESOLV=no-resolv
DMQ_DNS_SERVER=server=8.8.8.8\nserver=8.8.4.4
DMQ_DNS_SRV=
DMQ_DNS_TXT=
DMQ_GLOBAL=address=/docker/127.0.0.1

---

version: '3.9'

services:
  router:
    image: traefik:v3.0.0
    container_name: router
    restart: on-failure
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/conf/traefik.yml:/etc/traefik/traefik.yml
      - ./traefik/certs/cert.pem:/etc/traefik/cert.pem
      - ./traefik/certs/key.pem:/etc/traefik/key.pem
    labels:
      - traefik.enable=true
      - traefik.http.routers.router.rule=Host(`router${SHARED_DOMAIN_SEGMENT}.docker`)
      - traefik.http.routers.router.entrypoints=websecure
      - traefik.http.services.router.loadbalancer.server.port=8080
      - traefik.http.routers.router.tls=true

  ui:
    image: portainer/portainer-ce:2.20.2-alpine
    container_name: ui
    restart: on-failure
    ports:
      - "9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ui_data:/data
    command: "-H unix:///var/run/docker.sock"
    labels:
      - traefik.enable=true
      - traefik.http.routers.ui.rule=Host(`ui${SHARED_DOMAIN_SEGMENT}.docker`)
      - traefik.http.routers.ui.entrypoints=websecure
      - traefik.http.services.ui.loadbalancer.server.port=9000
      - traefik.http.routers.ui.tls=true
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider --no-check-certificate http://localhost:9000 || exit 1"
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 20s

  dns:
    image: 4km3/dnsmasq:latest
    container_name: dnsmasq
    restart: unless-stopped
    volumes:
      - ./dnsmasq.conf:/etc/dnsmasq.conf
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    cap_add:
      - NET_ADMIN

networks:
  default:
    name: network.${COMPOSE_PROJECT_NAME}
    ipam:
      config:
        - subnet: 172.100.61.1/24

volumes:
  ui_data:

...
